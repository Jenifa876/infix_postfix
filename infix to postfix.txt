#include<iostream>
#include<string>
using namespace std;

class Stack 
{
    int a[50],top=-1,u;
public:
    void push(int x)
    {
        top++;
        a[top]=x;
    }
    int pop()
    {
        u=a[top];
        top--;
        return u;
    }
    int peek()
    {
        return a[top];
    }
    bool isEmpty()
    {
        if(top<0)
            return true;
        else
            return false;
    }
    int preced(char c)
    {
        if(c=='^')
            return 3;
        else if(c=='*'||c=='/')
            return 2;
        else if(c=='+'||c=='-')
            return 1;
        else
            return -1;
    }
    char associ(char s)
    {
        if(s=='^')
            return 'R';
        else
            return 'L';
    }
    void in_post(string s)
    {
        char c;
        string result;
        for(int i=0;i<s.length();i++)
        {
            c=s[i];
            if(c>='a'&&c<='z'||c>='A'&&c<='Z'||c>=0&&c<=9)
            {
                result+=c;
            }
            else if(c=='(')
            {
                push(c);
            }
            else if(c==')')
            {
                while(peek()!='(')
                {
                    result+=peek();
                    pop();
                }
                pop();
            }
            else 
            {
                while(!isEmpty()&&preced(c)<preced(peek())||!isEmpty()&&preced(c)==preced(peek())&&associ(c)=='L')
                {
                    result+=peek();
                    pop();
                }
                push(c);
            }  
        }
        while(!isEmpty())
        {
            result+=peek();
            pop();
        }
        cout<<"Postfix expression= "<<result;
    }
};

int main()
{
    Stack q;
    string s;
    cout<<"Enter a Infix expression:";
    cin>>s;
    q.in_post(s);
    return 0;
}